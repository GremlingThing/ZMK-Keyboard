#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R      &kp T                                      &rgb_ug RGB_BRI                   &kp Y            &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LSHIFT  &kp A  &kp S  &kp D     &kp F      &kp G                     &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &kp H            &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C     &kp V      &kp B        &kp SPACE                     &rgb_ug RGB_BRD                   &kp N            &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                          &kp LGUI  &kp SPACE  &lt 1 ENTER                                                                  &mt SPACE ENTER  &mo 2  &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp ESCAPE  &kp N1         &kp N2     &kp N3     &kp N4     &kp N5                                          &bt BT_NXT                          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0    &kp DEL
&trans      &kp NUMBER_6   &kp N7     &kp N8     &kp N9     &kp N0                       &kp K_VOLUME_DOWN  &ext_power EP_TOG  &kp K_VOLUME_UP  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp HOME  &kp PG_UP
&trans      &kp BACKSLASH  &kp SLASH  &kp MINUS  &kp EQUAL  &kp BACKSPACE  &kp C_MUTE                       &bt BT_PRV                          &trans    &trans    &trans  &trans     &kp END   &kp PG_DN
                                      &trans     &trans     &trans                                                                              &kp INS   &kp DEL   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR       &trans
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BACKSLASH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE       &rgb_ug RGB_TOG
                                    &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
