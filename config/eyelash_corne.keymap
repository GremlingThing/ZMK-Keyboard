#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        pointer: pointer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "POINTER";
        };

        define: define {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NON_US_HASH) &kp D &kp E &kp F &kp I &kp N &kp E &kp SPACE>;
            label = "DEFINE";
        };

        include: include {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NON_US_HASH &kp I &kp N &kp C &kp L &kp U &kp D &kp E &kp SPACE>;
            label = "INCLUDE";
        };

        login: login {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N2 &kp N4 &kp N5 &kp N6 &kp N5 &kp N2>;
            label = "LOGIN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&mt LEFT_ALT TAB  &kp Q  &kp W  &kp E     &kp R      &kp T                                        &rgb_ug RGB_BRI                   &kp Y             &kp U  &kp I         &kp O    &kp P      &kp BSPC
&kp LSHIFT        &kp A  &kp S  &kp D     &kp F      &kp G                     &kp K_VOLUME_DOWN  &rgb_ug RGB_TOG  &kp K_VOLUME_UP  &kp H             &kp J  &kp K         &kp L    &kp SEMI   &kp SQT
&kp LCTRL         &kp Z  &kp X  &kp C     &kp V      &kp B        &kp SPACE                       &rgb_ug RGB_BRD                   &kp N             &kp M  &kp COMMA     &kp DOT  &kp SLASH  &kp ESC
                                &kp LGUI  &kp SPACE  &lt 1 ENTER                                                                    &mt DELETE ENTER  &mo 2  &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp ESCAPE  &kp N1                &kp N2             &kp N3           &kp N4     &kp N5                                      &bt BT_NXT                       &kp PG_UP  &kp UP_ARROW  &kp PG_DN       &kp END   &kp DEL  &trans
&trans      &kp NUMBER_6          &kp N7             &kp N8           &kp N9     &kp N0                   &kp K_VOLUME_DOWN  &studio_unlock  &kp K_VOLUME_UP  &kp LEFT   &kp DOWN      &kp RIGHT       &kp HOME  &none    &none
&trans      &kp NON_US_BACKSLASH  &kp DOUBLE_QUOTES  &kp NON_US_HASH  &kp MINUS  &kp EQUAL  &kp C_MUTE                       &bt BT_PRV                       &kp GRAVE  &pointer      &kp LEFT_BRACE  &kp RBRC  &define  &include
                                                     &trans           &trans     &trans                                                                       &trans     &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp LALT  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5                               &mmv MOVE_UP                     &rgb_ug RGB_COLOR_HSB(0,100,50)    &rgb_ug RGB_COLOR_HSB(136,100,50)  &rgb_ug RGB_COLOR_HSB(230,100,50)  &rgb_ug RGB_COLOR_HSB(66,100,50)  &none  &trans
&trans    &kp F6   &kp F7   &kp F8  &kp F9  &kp F10              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &rgb_ug RGB_COLOR_HSB(174,100,50)  &rgb_ug RGB_COLOR_HSB(266,100,49)  &rgb_ug RGB_COLOR_HSB(291,100,50)  &rgb_ug RGB_COLOR_HSB(25,100,50)  &none  &none
&none     &kp F11  &kp F12  &none   &none   &kp CAPS   &trans                    &mmv MOVE_DOWN                   &rgb_ug RGB_SPD                    &rgb_ug RGB_SPI                    &rgb_ug RGB_EFR                    &rgb_ug RGB_EFF                   &none  &login
                            &trans  &trans  &kp SPACE                                                             &trans                             &trans                             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
